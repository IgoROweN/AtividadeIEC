name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Executa nas mudanças na branch principal
  pull_request:
    branches:
      - main  # Executa para PRs na branch principal

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3  # Usando v3 que é mais estável
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/minha-aplicacao:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CHAVE_SSH_SERVER }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 201.23.3.86 >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          ssh -i ~/.ssh/id_rsa aluno@201.23.3.86 "echo 'SSH connection successful!'"

      - name: Deploy container to remote server
        run: |
          ssh -i ~/.ssh/id_rsa aluno@201.23.3.86 << EOF
            docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin <<< "${{ secrets.DOCKER_PASSWORD }}"
            docker stop minha-aplicacao || true
            docker rm minha-aplicacao || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/minha-aplicacao:latest
            docker run -d -p 8092:8080 --name minha-aplicacao ${{ secrets.DOCKER_USERNAME }}/minha-aplicacao:latest
            docker ps | grep minha-aplicacao || echo 'Container failed to start'
          EOF
